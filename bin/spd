#!/usr/bin/env ruby

require 'ops/sanity'
require 'ops/distribute'
require 'ops/ingester'

require 'entities/subpart'

require 'common/logger'
require 'config/distribution_config'
require 'config/ingest_config'

$config_location = "config"

if ARGV.length == 0
  # Todo better error / documentation
  SPD::Common::Logger.log_fatal("Provide an action as the first argument")
end

command = ARGV[0].downcase
subargs = ARGV[1..-1]

# TODO restructure to be more independent of ARGV
if command == "sanity"
  do_sanity "sanity", subargs
elsif command == "distribute"
  # Load the configuration file
  config = SPD::Config::DistributionConfig.load_from_disk($config_location)
  if config.failure?
    SPD::Common::Logger.log_fatal("Could not load configuration file: #{config.value}")
  end
  config = config.value

  # Determine the directory to read from
  unless Dir.exist?(config.input_dir)
    Common.log_fatal "First argument must be the directory containing submissions"
  end

  SPD::Ops.do_distribute(config)
elsif command == "ingest"
  config = SPD::Config::IngestConfig.load_from_disk($config_location)
  if config.failure?
    SPD::Common::Logger.log_fatal("Could not load configuration file: #{config.value}")
  end
  config = config.value

  SPD::Ops::Ingester.new(config).do_ingest
end
